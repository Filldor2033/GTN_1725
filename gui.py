"""
–ú–æ–¥—É–ª—å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –∏–≥—Ä—ã "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ".
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫—É tkinter –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è GUI.
"""

import tkinter as tk
from tkinter import messagebox, ttk
from main import GuessTheNumberGame

class GuessTheNumberGUI:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏–≥—Ä—ã."""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""
        self.game = GuessTheNumberGame()
        self.setup_gui()
    
    def setup_gui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""
        # –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        self.root = tk.Tk()
        self.root.title("–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ")
        self.root.geometry("500x400")
        self.root.resizable(False, False)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π
        self.setup_styles()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.create_widgets()
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∏–≥—Ä–µ
        self.update_game_info()
    
    def setup_styles(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""
        style = ttk.Style()
        style.configure("TFrame", background="#f0f0f0")
        style.configure("TLabel", background="#f0f0f0", font=("Arial", 10))
        style.configure("TButton", font=("Arial", 10))
        style.configure("Header.TLabel", font=("Arial", 14, "bold"))
    
    def create_widgets(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö –≤–∏–¥–∂–µ—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º
        main_frame = ttk.Frame(self.root, padding="20")
        main_frame.grid(row=0, column=0, sticky=(tk.W, tk.E, tk.N, tk.S))
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header_label = ttk.Label(
            main_frame, 
            text="üéØ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ", 
            style="Header.TLabel"
        )
        header_label.grid(row=0, column=0, columnspan=2, pady=(0, 20))
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∏–≥—Ä–µ
        self.info_label = ttk.Label(
            main_frame, 
            text="", 
            wraplength=400
        )
        self.info_label.grid(row=1, column=0, columnspan=2, pady=(0, 20))
        
        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞
        input_frame = ttk.Frame(main_frame)
        input_frame.grid(row=2, column=0, columnspan=2, pady=(0, 20))
        
        ttk.Label(input_frame, text="–í–∞—à–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ:").grid(row=0, column=0)
        
        self.guess_entry = ttk.Entry(input_frame, width=10, font=("Arial", 12))
        self.guess_entry.grid(row=0, column=1, padx=(10, 5))
        self.guess_entry.bind("<Return>", lambda event: self.on_guess())
        
        guess_button = ttk.Button(
            input_frame, 
            text="–£–≥–∞–¥–∞—Ç—å", 
            command=self.on_guess
        )
        guess_button.grid(row=0, column=2, padx=(5, 0))
        
        # –û–±–ª–∞—Å—Ç—å –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        self.result_text = tk.Text(
            main_frame, 
            height=8, 
            width=50, 
            font=("Arial", 10),
            state=tk.DISABLED
        )
        self.result_text.grid(row=3, column=0, columnspan=2, pady=(0, 20))
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        button_frame = ttk.Frame(main_frame)
        button_frame.grid(row=4, column=0, columnspan=2)
        
        self.restart_button = ttk.Button(
            button_frame, 
            text="–ù–æ–≤–∞—è –∏–≥—Ä–∞", 
            command=self.on_restart,
            state=tk.NORMAL
        )
        self.restart_button.grid(row=0, column=0, padx=(0, 10))
        
        exit_button = ttk.Button(
            button_frame, 
            text="–í—ã—Ö–æ–¥", 
            command=self.root.quit
        )
        exit_button.grid(row=0, column=1)
    
    def update_game_info(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä–µ."""
        state = self.game.get_game_state()
        info_text = (
            f"–î–∏–∞–ø–∞–∑–æ–Ω —á–∏—Å–µ–ª: –æ—Ç {state['min_range']} –¥–æ {state['max_range']}\n"
            f"–ü–æ–ø—ã—Ç–æ–∫: {state['attempts']}\n"
            f"–°—Ç–∞—Ç—É—Å: {'–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞' if state['game_over'] else '–ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è'}"
        )
        self.info_label.config(text=info_text)
    
    def append_result(self, text):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –æ–±–ª–∞—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤."""

        self.result_text.config(state=tk.NORMAL)
        self.result_text.insert(tk.END, text + "\n")
        self.result_text.see(tk.END)
        self.result_text.config(state=tk.DISABLED)
    
    def on_guess(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è —É–≥–∞–¥—ã–≤–∞–Ω–∏—è —á–∏—Å–ª–∞."""
        guess = self.guess_entry.get()
        if not guess:
            messagebox.showwarning("–í–Ω–∏–º–∞–Ω–∏–µ", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")
            return
        
        result = self.game.make_guess(guess)
        
        if not result["valid"]:
            messagebox.showerror("–û—à–∏–±–∫–∞", result["message"])
            return
        
        self.append_result(f"–ü–æ–ø—ã—Ç–∫–∞ {result['attempts']}: {guess} - {result['message']}")
        self.guess_entry.delete(0, tk.END)
        self.update_game_info()
        
        if result["status"] == "win":
            self.restart_button.config(state=tk.NORMAL)
            messagebox.showinfo("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!", result["message"])
    
    def on_restart(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã."""
        self.game.reset_game()
        self.result_text.config(state=tk.NORMAL)
        self.result_text.delete(1.0, tk.END)
        self.result_text.config(state=tk.DISABLED)
        self.update_game_info()
        self.restart_button.config(state=tk.DISABLED)
        self.append_result("=== –ù–æ–≤–∞—è –∏–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å ===")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
        self.root.mainloop()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ GUI."""
    app = GuessTheNumberGUI()
    app.run()

if __name__ == "__main__":
    main()
